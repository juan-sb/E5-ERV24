/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("branch_taken")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("by_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("by_en[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("by_en[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("by_en[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("by_en[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("decoded_pc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoded_pc[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("GPIO")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("GPIO[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("instr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 28;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instr[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("gpioen")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nreset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("predicted_taken")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc_wr_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc_wr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc_wr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("alu_z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("immed")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("immed[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("alua")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alua[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alub[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

TRANSITION_LIST("branch_taken")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("by_en[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.287;
			LEVEL 0 FOR 72.808;
			LEVEL 1 FOR 19.593;
			LEVEL 0 FOR 280.479;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 40.797;
			LEVEL 1 FOR 19.203;
			LEVEL 0 FOR 0.63;
		}
	}
}

TRANSITION_LIST("by_en[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.918;
			LEVEL 0 FOR 252.845;
			LEVEL 1 FOR 19.556;
			LEVEL 0 FOR 21.114;
			LEVEL 1 FOR 18.886;
			LEVEL 0 FOR 60.516;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 40.801;
			LEVEL 1 FOR 19.199;
			LEVEL 0 FOR 0.966;
		}
	}
}

TRANSITION_LIST("by_en[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.198;
			LEVEL 0 FOR 152.781;
			LEVEL 1 FOR 20.222;
			LEVEL 0 FOR 19.778;
			LEVEL 1 FOR 39.62;
			LEVEL 0 FOR 760.401;
		}
	}
}

TRANSITION_LIST("by_en[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.134;
			LEVEL 0 FOR 32.191;
			LEVEL 1 FOR 40.671;
			LEVEL 0 FOR 100.128;
			LEVEL 1 FOR 19.872;
			LEVEL 0 FOR 800.004;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("decoded_pc[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.735;
			LEVEL 0 FOR 996.265;
		}
	}
}

TRANSITION_LIST("decoded_pc[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.88;
			LEVEL 0 FOR 996.12;
		}
	}
}

TRANSITION_LIST("decoded_pc[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.78;
			LEVEL 0 FOR 232.38;
			LEVEL 1 FOR 762.84;
		}
	}
}

TRANSITION_LIST("decoded_pc[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.742;
			LEVEL 0 FOR 152.311;
			LEVEL 1 FOR 80.082;
			LEVEL 0 FOR 760.865;
		}
	}
}

TRANSITION_LIST("decoded_pc[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.919;
			LEVEL 0 FOR 52.402;
			LEVEL 1 FOR 99.991;
			LEVEL 0 FOR 40.009;
			LEVEL 1 FOR 39.991;
			LEVEL 0 FOR 763.688;
		}
	}
}

TRANSITION_LIST("decoded_pc[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.722;
			LEVEL 0 FOR 32.352;
			LEVEL 1 FOR 20.042;
			LEVEL 0 FOR 79.958;
			LEVEL 1 FOR 20.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 20.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 20.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 80.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 19.958;
			LEVEL 1 FOR 23.926;
		}
	}
}

TRANSITION_LIST("decoded_pc[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.056;
			LEVEL 0 FOR 995.944;
		}
	}
}

TRANSITION_LIST("decoded_pc[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.046;
			LEVEL 0 FOR 995.954;
		}
	}
}

TRANSITION_LIST("GPIO[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.244;
			LEVEL Z FOR 174.35;
			LEVEL 0 FOR 820.406;
		}
	}
}

TRANSITION_LIST("GPIO[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.74;
			LEVEL Z FOR 172.309;
			LEVEL 0 FOR 822.951;
		}
	}
}

TRANSITION_LIST("GPIO[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.244;
			LEVEL Z FOR 174.106;
			LEVEL 0 FOR 820.65;
		}
	}
}

TRANSITION_LIST("GPIO[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 2.686;
			LEVEL Z FOR 174.258;
			LEVEL 0 FOR 823.056;
		}
	}
}

TRANSITION_LIST("GPIO[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.011;
			LEVEL Z FOR 172.19;
			LEVEL 0 FOR 822.799;
		}
	}
}

TRANSITION_LIST("GPIO[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.121;
			LEVEL Z FOR 172.312;
			LEVEL 0 FOR 822.567;
		}
	}
}

TRANSITION_LIST("GPIO[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 2.604;
			LEVEL Z FOR 174.331;
			LEVEL 0 FOR 823.065;
		}
	}
}

TRANSITION_LIST("GPIO[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.291;
			LEVEL Z FOR 172.21;
			LEVEL 0 FOR 822.499;
		}
	}
}

TRANSITION_LIST("instr[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("gpioen")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.488;
			LEVEL 0 FOR 51.064;
			LEVEL 1 FOR 20.107;
			LEVEL 0 FOR 80.607;
			LEVEL 1 FOR 40.158;
			LEVEL 0 FOR 800.576;
		}
	}
}

TRANSITION_LIST("nreset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("predicted_taken")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("pc_wr_flag")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("pc_wr[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.212;
			LEVEL 0 FOR 48.277;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 99.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 159.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 39.929;
			LEVEL 1 FOR 20.071;
			LEVEL 0 FOR 22.44;
		}
	}
}

TRANSITION_LIST("pc_wr[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.763;
			LEVEL 0 FOR 48.679;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 279.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 39.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 22.517;
		}
	}
}

TRANSITION_LIST("pc_wr[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.568;
			LEVEL 0 FOR 50.417;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 279.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 39.994;
			LEVEL 1 FOR 20.006;
			LEVEL 0 FOR 22.009;
		}
	}
}

TRANSITION_LIST("pc_wr[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.45;
			LEVEL 0 FOR 48.913;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 279.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 39.921;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 22.558;
		}
	}
}

TRANSITION_LIST("pc_wr[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.033;
			LEVEL 0 FOR 49.896;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 159.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 99.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 21.973;
		}
	}
}

TRANSITION_LIST("pc_wr[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.433;
			LEVEL 0 FOR 49.337;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 59.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 199.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 39.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 22.132;
		}
	}
}

TRANSITION_LIST("pc_wr[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.039;
			LEVEL 0 FOR 49.038;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 159.959;
			LEVEL 1 FOR 20.041;
			LEVEL 0 FOR 24.175;
			LEVEL 1 FOR 16.71;
			LEVEL 0 FOR 62.973;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 21.313;
			LEVEL 1 FOR 38.687;
			LEVEL 0 FOR 0.337;
		}
	}
}

TRANSITION_LIST("pc_wr[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("alu_z")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 15.219;
			LEVEL 1 FOR 46.956;
			LEVEL 0 FOR 44.763;
			LEVEL 1 FOR 55.963;
			LEVEL 0 FOR 121.334;
			LEVEL 1 FOR 17.94;
			LEVEL 0 FOR 21.267;
			LEVEL 1 FOR 58.619;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 24.972;
			LEVEL 1 FOR 35.028;
			LEVEL 0 FOR 17.939;
		}
	}
}

TRANSITION_LIST("immed[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.575;
			LEVEL 0 FOR 52.293;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 99.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 159.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 39.896;
			LEVEL 1 FOR 20.104;
			LEVEL 0 FOR 22.028;
		}
	}
}

TRANSITION_LIST("immed[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.133;
			LEVEL 0 FOR 52.345;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 279.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 39.948;
			LEVEL 1 FOR 20.052;
			LEVEL 0 FOR 23.47;
		}
	}
}

TRANSITION_LIST("immed[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.381;
			LEVEL 0 FOR 52.376;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 279.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 39.979;
			LEVEL 1 FOR 20.021;
			LEVEL 0 FOR 23.222;
		}
	}
}

TRANSITION_LIST("immed[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.005;
			LEVEL 0 FOR 52.372;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 279.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 39.976;
			LEVEL 1 FOR 20.024;
			LEVEL 0 FOR 23.599;
		}
	}
}

TRANSITION_LIST("immed[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.27;
			LEVEL 0 FOR 52.365;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 159.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 99.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 39.969;
			LEVEL 1 FOR 20.031;
			LEVEL 0 FOR 23.334;
		}
	}
}

TRANSITION_LIST("immed[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.3;
			LEVEL 0 FOR 52.362;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 59.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 199.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 39.966;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 23.304;
		}
	}
}

TRANSITION_LIST("immed[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.549;
			LEVEL 0 FOR 52.326;
			LEVEL 1 FOR 20.07;
			LEVEL 0 FOR 159.93;
			LEVEL 1 FOR 20.07;
			LEVEL 0 FOR 743.055;
		}
	}
}

TRANSITION_LIST("immed[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.801;
			LEVEL 0 FOR 52.348;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 59.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 19.951;
			LEVEL 1 FOR 40.049;
			LEVEL 0 FOR 59.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 79.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 39.951;
			LEVEL 1 FOR 20.049;
			LEVEL 0 FOR 3.802;
		}
	}
}

TRANSITION_LIST("alua[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.65;
			LEVEL 0 FOR 994.35;
		}
	}
}

TRANSITION_LIST("alua[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.955;
			LEVEL 0 FOR 995.045;
		}
	}
}

TRANSITION_LIST("alua[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.667;
			LEVEL 0 FOR 994.333;
		}
	}
}

TRANSITION_LIST("alua[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.986;
			LEVEL 0 FOR 994.014;
		}
	}
}

TRANSITION_LIST("alua[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.667;
			LEVEL 0 FOR 994.333;
		}
	}
}

TRANSITION_LIST("alua[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.158;
			LEVEL 0 FOR 993.842;
		}
	}
}

TRANSITION_LIST("alua[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.323;
			LEVEL 0 FOR 992.677;
		}
	}
}

TRANSITION_LIST("alua[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.999;
			LEVEL 0 FOR 232.35;
			LEVEL 1 FOR 19.979;
			LEVEL 0 FOR 741.672;
		}
	}
}

TRANSITION_LIST("alua[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.053;
			LEVEL 0 FOR 232.346;
			LEVEL 1 FOR 19.985;
			LEVEL 0 FOR 741.616;
		}
	}
}

TRANSITION_LIST("alua[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.681;
			LEVEL 0 FOR 994.319;
		}
	}
}

TRANSITION_LIST("alua[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.825;
			LEVEL 0 FOR 372.334;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 39.931;
			LEVEL 1 FOR 20.069;
			LEVEL 0 FOR 1.772;
		}
	}
}

TRANSITION_LIST("alua[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.587;
			LEVEL 0 FOR 292.285;
			LEVEL 1 FOR 20.118;
			LEVEL 0 FOR 682.01;
		}
	}
}

TRANSITION_LIST("alub[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.796;
			LEVEL 0 FOR 993.204;
		}
	}
}

TRANSITION_LIST("alub[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.896;
			LEVEL 0 FOR 994.104;
		}
	}
}

TRANSITION_LIST("alub[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.925;
			LEVEL 0 FOR 994.075;
		}
	}
}

TRANSITION_LIST("alub[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.486;
			LEVEL 0 FOR 994.514;
		}
	}
}

TRANSITION_LIST("alub[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.54;
			LEVEL 0 FOR 72.293;
			LEVEL 1 FOR 20.107;
			LEVEL 0 FOR 59.868;
			LEVEL 1 FOR 19.939;
			LEVEL 0 FOR 20.086;
			LEVEL 1 FOR 20.107;
			LEVEL 0 FOR 781.06;
		}
	}
}

TRANSITION_LIST("alub[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.254;
			LEVEL 0 FOR 72.265;
			LEVEL 1 FOR 20.133;
			LEVEL 0 FOR 60.001;
			LEVEL 1 FOR 20.125;
			LEVEL 0 FOR 821.222;
		}
	}
}

TRANSITION_LIST("alub[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.331;
			LEVEL 0 FOR 71.814;
			LEVEL 1 FOR 20.139;
			LEVEL 0 FOR 60.47;
			LEVEL 1 FOR 20.189;
			LEVEL 0 FOR 821.057;
		}
	}
}

TRANSITION_LIST("alub[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.017;
			LEVEL 0 FOR 71.333;
			LEVEL 1 FOR 20.101;
			LEVEL 0 FOR 61.121;
			LEVEL 1 FOR 20.191;
			LEVEL 0 FOR 821.237;
		}
	}
}

TRANSITION_LIST("alub[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.207;
			LEVEL 0 FOR 72.277;
			LEVEL 1 FOR 20.119;
			LEVEL 0 FOR 60.38;
			LEVEL 1 FOR 20.127;
			LEVEL 0 FOR 79.374;
			LEVEL 1 FOR 20.119;
			LEVEL 0 FOR 100.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 40.38;
			LEVEL 1 FOR 19.62;
			LEVEL 0 FOR 1.397;
		}
	}
}

TRANSITION_LIST("alub[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.138;
			LEVEL 0 FOR 72.306;
			LEVEL 1 FOR 20.09;
			LEVEL 0 FOR 59.878;
			LEVEL 1 FOR 20.18;
			LEVEL 0 FOR 821.408;
		}
	}
}

TRANSITION_LIST("alub[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.945;
			LEVEL 0 FOR 72.058;
			LEVEL 1 FOR 20.135;
			LEVEL 0 FOR 60.616;
			LEVEL 1 FOR 20.127;
			LEVEL 0 FOR 79.122;
			LEVEL 1 FOR 20.135;
			LEVEL 0 FOR 100.616;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 40.41;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 1.656;
		}
	}
}

TRANSITION_LIST("alub[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.063;
			LEVEL 0 FOR 71.832;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 61.028;
			LEVEL 1 FOR 20.174;
			LEVEL 0 FOR 19.225;
			LEVEL 1 FOR 39.573;
			LEVEL 0 FOR 59.902;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 683.007;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "nreset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "instr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "instr[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "by_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
	CHILDREN = 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "gpioen";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "predicted_taken";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "branch_taken";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60, 61, 62, 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "alu_z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "immed";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 70, 71, 72, 73, 74, 75, 76;
}

DISPLAY_LINE
{
	CHANNEL = "immed[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "alua";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
	CHILDREN = 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89;
}

DISPLAY_LINE
{
	CHANNEL = "alua[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
	CHILDREN = 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102;
}

DISPLAY_LINE
{
	CHANNEL = "alub[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 90;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
