/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nreset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("alu_f3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_f3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_f3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_f3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alua")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alua[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alub[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("aluibranch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_rd[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("nreset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("alu_f3[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.537;
			LEVEL 0 FOR 995.463;
		}
	}
}

TRANSITION_LIST("alu_f3[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.344;
			LEVEL 0 FOR 995.656;
		}
	}
}

TRANSITION_LIST("alu_f3[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.586;
			LEVEL 0 FOR 372.44;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 40.034;
			LEVEL 1 FOR 19.966;
			LEVEL 0 FOR 3.008;
		}
	}
}

TRANSITION_LIST("alu_out[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.609;
			LEVEL 0 FOR 75.374;
			LEVEL 1 FOR 17.032;
			LEVEL 0 FOR 103.256;
			LEVEL 1 FOR 19.911;
			LEVEL 0 FOR 160.564;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 43.731;
			LEVEL 1 FOR 16.269;
			LEVEL 0 FOR 1.985;
		}
	}
}

TRANSITION_LIST("alu_out[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.086;
			LEVEL 0 FOR 75.261;
			LEVEL 1 FOR 17.145;
			LEVEL 0 FOR 283.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 43.736;
			LEVEL 1 FOR 16.264;
			LEVEL 0 FOR 1.508;
		}
	}
}

TRANSITION_LIST("alu_out[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.48;
			LEVEL 0 FOR 76.445;
			LEVEL 1 FOR 15.961;
			LEVEL 0 FOR 283.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 43.816;
			LEVEL 1 FOR 16.184;
			LEVEL 0 FOR 2.114;
		}
	}
}

TRANSITION_LIST("alu_out[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.46;
			LEVEL 0 FOR 75.341;
			LEVEL 1 FOR 17.065;
			LEVEL 0 FOR 160.006;
			LEVEL 1 FOR 3.618;
			LEVEL 0 FOR 120.866;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 44.49;
			LEVEL 1 FOR 15.51;
			LEVEL 0 FOR 2.134;
		}
	}
}

TRANSITION_LIST("alu_out[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.663;
			LEVEL 0 FOR 75.537;
			LEVEL 1 FOR 16.869;
			LEVEL 0 FOR 159.934;
			LEVEL 1 FOR 20.066;
			LEVEL 0 FOR 103.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 43.337;
			LEVEL 1 FOR 16.663;
			LEVEL 0 FOR 1.931;
		}
	}
}

TRANSITION_LIST("alu_out[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.392;
			LEVEL 0 FOR 75.765;
			LEVEL 1 FOR 16.641;
			LEVEL 0 FOR 902.202;
		}
	}
}

TRANSITION_LIST("alu_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.625;
			LEVEL 0 FOR 75.274;
			LEVEL 1 FOR 17.132;
			LEVEL 0 FOR 162.868;
			LEVEL 1 FOR 17.132;
			LEVEL 0 FOR 23.968;
			LEVEL 1 FOR 16.032;
			LEVEL 0 FOR 681.969;
		}
	}
}

TRANSITION_LIST("alu_out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.696;
			LEVEL 0 FOR 76.138;
			LEVEL 1 FOR 16.268;
			LEVEL 0 FOR 103.791;
			LEVEL 1 FOR 36.209;
			LEVEL 0 FOR 761.898;
		}
	}
}

TRANSITION_LIST("alua[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.07;
			LEVEL 0 FOR 993.93;
		}
	}
}

TRANSITION_LIST("alua[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.951;
			LEVEL 0 FOR 995.049;
		}
	}
}

TRANSITION_LIST("alua[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.054;
			LEVEL 0 FOR 993.946;
		}
	}
}

TRANSITION_LIST("alua[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.953;
			LEVEL 0 FOR 232.431;
			LEVEL 1 FOR 19.902;
			LEVEL 0 FOR 742.714;
		}
	}
}

TRANSITION_LIST("alua[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.837;
			LEVEL 0 FOR 232.453;
			LEVEL 1 FOR 19.903;
			LEVEL 0 FOR 742.807;
		}
	}
}

TRANSITION_LIST("alua[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.994;
			LEVEL 0 FOR 995.006;
		}
	}
}

TRANSITION_LIST("alua[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.126;
			LEVEL 0 FOR 373.294;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 40.864;
			LEVEL 1 FOR 19.136;
			LEVEL 0 FOR 2.444;
		}
	}
}

TRANSITION_LIST("alua[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.97;
			LEVEL 0 FOR 292.951;
			LEVEL 1 FOR 19.466;
			LEVEL 0 FOR 682.613;
		}
	}
}

TRANSITION_LIST("alub[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.637;
			LEVEL 0 FOR 72.356;
			LEVEL 1 FOR 20.062;
			LEVEL 0 FOR 60.168;
			LEVEL 1 FOR 19.715;
			LEVEL 0 FOR 20.343;
			LEVEL 1 FOR 19.774;
			LEVEL 0 FOR 781.945;
		}
	}
}

TRANSITION_LIST("alub[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.138;
			LEVEL 0 FOR 71.099;
			LEVEL 1 FOR 20.122;
			LEVEL 0 FOR 61.208;
			LEVEL 1 FOR 20.179;
			LEVEL 0 FOR 820.254;
		}
	}
}

TRANSITION_LIST("alub[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.138;
			LEVEL 0 FOR 72.042;
			LEVEL 1 FOR 20.019;
			LEVEL 0 FOR 60.926;
			LEVEL 1 FOR 20.15;
			LEVEL 0 FOR 821.725;
		}
	}
}

TRANSITION_LIST("alub[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.039;
			LEVEL 0 FOR 71.853;
			LEVEL 1 FOR 20.204;
			LEVEL 0 FOR 61.002;
			LEVEL 1 FOR 20.231;
			LEVEL 0 FOR 819.671;
		}
	}
}

TRANSITION_LIST("alub[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.117;
			LEVEL 0 FOR 72.402;
			LEVEL 1 FOR 20.084;
			LEVEL 0 FOR 60.457;
			LEVEL 1 FOR 20.173;
			LEVEL 0 FOR 79.286;
			LEVEL 1 FOR 20.084;
			LEVEL 0 FOR 100.457;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 40.525;
			LEVEL 1 FOR 19.475;
			LEVEL 0 FOR 2.465;
		}
	}
}

TRANSITION_LIST("alub[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.211;
			LEVEL 0 FOR 71.665;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 60.959;
			LEVEL 1 FOR 20.051;
			LEVEL 0 FOR 822.076;
		}
	}
}

TRANSITION_LIST("alub[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.066;
			LEVEL 0 FOR 72.003;
			LEVEL 1 FOR 20.144;
			LEVEL 0 FOR 60.551;
			LEVEL 1 FOR 20.102;
			LEVEL 0 FOR 79.203;
			LEVEL 1 FOR 20.144;
			LEVEL 0 FOR 100.551;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 40.28;
			LEVEL 1 FOR 19.72;
			LEVEL 0 FOR 2.516;
		}
	}
}

TRANSITION_LIST("alub[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.35;
			LEVEL 0 FOR 72.406;
			LEVEL 1 FOR 20.037;
			LEVEL 0 FOR 60.387;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 19.597;
			LEVEL 1 FOR 39.978;
			LEVEL 0 FOR 59.963;
			LEVEL 1 FOR 20.037;
			LEVEL 0 FOR 682.207;
		}
	}
}

TRANSITION_LIST("aluibranch")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.455;
			LEVEL 0 FOR 372.398;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 39.984;
			LEVEL 1 FOR 20.016;
			LEVEL 0 FOR 3.131;
		}
	}
}

TRANSITION_LIST("alu_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.636;
			LEVEL 0 FOR 52.381;
			LEVEL 1 FOR 40.025;
			LEVEL 0 FOR 99.975;
			LEVEL 1 FOR 40.025;
			LEVEL 0 FOR 19.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 19.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 59.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 39.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 2.958;
		}
	}
}

TRANSITION_LIST("alu_rd[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.253;
			LEVEL 0 FOR 212.385;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 19.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 19.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 59.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 39.973;
			LEVEL 1 FOR 20.027;
			LEVEL 0 FOR 3.335;
		}
	}
}

TRANSITION_LIST("alu_rd[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.235;
			LEVEL 0 FOR 212.399;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 19.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 19.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 59.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 39.987;
			LEVEL 1 FOR 20.013;
			LEVEL 0 FOR 3.353;
		}
	}
}

TRANSITION_LIST("alu_rd[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.73;
			LEVEL 0 FOR 52.374;
			LEVEL 1 FOR 40.038;
			LEVEL 0 FOR 59.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 19.962;
			LEVEL 1 FOR 40.038;
			LEVEL 0 FOR 19.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 19.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 59.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 39.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 2.858;
		}
	}
}

TRANSITION_LIST("alu_rd[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.214;
			LEVEL 0 FOR 72.389;
			LEVEL 1 FOR 20.023;
			LEVEL 0 FOR 99.977;
			LEVEL 1 FOR 20.023;
			LEVEL 0 FOR 782.374;
		}
	}
}

TRANSITION_LIST("alu_rd[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.4;
			LEVEL 0 FOR 52.351;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 79.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 19.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 99.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 39.928;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 3.177;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "nreset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alua";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "alua[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "alub[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "aluibranch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alu_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
