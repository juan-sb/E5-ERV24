/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nreset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("alu_f3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_f3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_f3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_f3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alua")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alua[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alub[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("aluibranch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_rd")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 5;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_rd[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("alu_rd[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_rd";
}

SIGNAL("aluisel")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pipe_reg_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pipe_jmp_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pipe_fetch_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pipe_dec_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pipe_alu_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoded_instr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 20;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoded_instr[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

SIGNAL("decoded_instr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_instr";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("nreset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 980.0;
		}
	}
}

TRANSITION_LIST("alu_f3[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.508;
			LEVEL 0 FOR 994.492;
		}
	}
}

TRANSITION_LIST("alu_f3[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.03;
			LEVEL 0 FOR 995.97;
		}
	}
}

TRANSITION_LIST("alu_f3[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.842;
			LEVEL 0 FOR 552.32;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 39.909;
			LEVEL 1 FOR 20.091;
			LEVEL 0 FOR 1.747;
		}
	}
}

TRANSITION_LIST("alu_out[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.569;
			LEVEL 0 FOR 395.054;
			LEVEL 1 FOR 17.354;
			LEVEL 0 FOR 142.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 42.99;
			LEVEL 1 FOR 17.01;
			LEVEL 0 FOR 1.023;
		}
	}
}

TRANSITION_LIST("alu_out[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.561;
			LEVEL 0 FOR 555.733;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 43.325;
			LEVEL 1 FOR 16.675;
			LEVEL 0 FOR 2.031;
		}
	}
}

TRANSITION_LIST("alu_out[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.239;
			LEVEL 0 FOR 555.182;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 42.774;
			LEVEL 1 FOR 17.226;
			LEVEL 0 FOR 2.353;
		}
	}
}

TRANSITION_LIST("alu_out[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.742;
			LEVEL 0 FOR 472.285;
			LEVEL 1 FOR 2.966;
			LEVEL 0 FOR 79.537;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 42.38;
			LEVEL 1 FOR 17.62;
			LEVEL 0 FOR 1.85;
		}
	}
}

TRANSITION_LIST("alu_out[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.428;
			LEVEL 0 FOR 472.211;
			LEVEL 1 FOR 3.567;
			LEVEL 0 FOR 78.616;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 41.986;
			LEVEL 1 FOR 18.014;
			LEVEL 0 FOR 1.164;
		}
	}
}

TRANSITION_LIST("alu_out[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.504;
			LEVEL 0 FOR 316.893;
			LEVEL 1 FOR 15.515;
			LEVEL 0 FOR 139.919;
			LEVEL 1 FOR 20.081;
			LEVEL 0 FOR 502.088;
		}
	}
}

TRANSITION_LIST("alu_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.061;
			LEVEL 0 FOR 156.965;
			LEVEL 1 FOR 15.443;
			LEVEL 0 FOR 64.293;
			LEVEL 1 FOR 15.707;
			LEVEL 0 FOR 303.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 43.717;
			LEVEL 1 FOR 16.283;
			LEVEL 0 FOR 2.531;
		}
	}
}

TRANSITION_LIST("alu_out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.608;
			LEVEL 0 FOR 75.962;
			LEVEL 1 FOR 16.446;
			LEVEL 0 FOR 143.554;
			LEVEL 1 FOR 16.446;
			LEVEL 0 FOR 143.554;
			LEVEL 1 FOR 16.446;
			LEVEL 0 FOR 63.554;
			LEVEL 1 FOR 16.446;
			LEVEL 0 FOR 64.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 44.0;
			LEVEL 1 FOR 16.0;
			LEVEL 0 FOR 2.984;
		}
	}
}

TRANSITION_LIST("alua[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.788;
			LEVEL 0 FOR 994.212;
		}
	}
}

TRANSITION_LIST("alua[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.61;
			LEVEL 0 FOR 994.39;
		}
	}
}

TRANSITION_LIST("alua[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.42;
			LEVEL 0 FOR 994.58;
		}
	}
}

TRANSITION_LIST("alua[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.125;
			LEVEL 0 FOR 413.249;
			LEVEL 1 FOR 58.88;
			LEVEL 0 FOR 522.746;
		}
	}
}

TRANSITION_LIST("alua[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.81;
			LEVEL 0 FOR 432.109;
			LEVEL 1 FOR 40.187;
			LEVEL 0 FOR 520.894;
		}
	}
}

TRANSITION_LIST("alua[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.328;
			LEVEL 0 FOR 413.116;
			LEVEL 1 FOR 19.001;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 40.271;
			LEVEL 0 FOR 502.274;
		}
	}
}

TRANSITION_LIST("alua[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.933;
			LEVEL 0 FOR 232.95;
			LEVEL 1 FOR 19.161;
			LEVEL 0 FOR 60.839;
			LEVEL 1 FOR 19.161;
			LEVEL 0 FOR 662.956;
		}
	}
}

TRANSITION_LIST("alua[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.779;
			LEVEL 0 FOR 153.348;
			LEVEL 1 FOR 18.809;
			LEVEL 0 FOR 141.191;
			LEVEL 1 FOR 18.809;
			LEVEL 0 FOR 663.064;
		}
	}
}

TRANSITION_LIST("alub[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.095;
			LEVEL 0 FOR 391.566;
			LEVEL 1 FOR 19.981;
			LEVEL 0 FOR 582.358;
		}
	}
}

TRANSITION_LIST("alub[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.274;
			LEVEL 0 FOR 994.726;
		}
	}
}

TRANSITION_LIST("alub[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.171;
			LEVEL 0 FOR 994.829;
		}
	}
}

TRANSITION_LIST("alub[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.81;
			LEVEL 0 FOR 994.19;
		}
	}
}

TRANSITION_LIST("alub[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.63;
			LEVEL 0 FOR 994.37;
		}
	}
}

TRANSITION_LIST("alub[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.881;
			LEVEL 0 FOR 551.81;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 39.398;
			LEVEL 1 FOR 20.602;
			LEVEL 0 FOR 1.707;
		}
	}
}

TRANSITION_LIST("alub[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.627;
			LEVEL 0 FOR 994.373;
		}
	}
}

TRANSITION_LIST("alub[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.855;
			LEVEL 0 FOR 71.71;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 60.91;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 40.197;
			LEVEL 1 FOR 19.803;
			LEVEL 0 FOR 1.722;
		}
	}
}

TRANSITION_LIST("aluibranch")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.952;
			LEVEL 0 FOR 552.324;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 39.924;
			LEVEL 1 FOR 20.076;
			LEVEL 0 FOR 2.648;
		}
	}
}

TRANSITION_LIST("alu_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.525;
			LEVEL 0 FOR 72.358;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 59.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 59.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 59.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 59.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 59.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 59.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 39.95;
			LEVEL 1 FOR 20.05;
			LEVEL 0 FOR 3.067;
		}
	}
}

TRANSITION_LIST("alu_rd[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.25;
			LEVEL 0 FOR 472.367;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 59.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 39.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 3.344;
		}
	}
}

TRANSITION_LIST("alu_rd[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.847;
			LEVEL 0 FOR 472.407;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 60.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 40.001;
			LEVEL 1 FOR 19.999;
			LEVEL 0 FOR 3.747;
		}
	}
}

TRANSITION_LIST("alu_rd[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.894;
			LEVEL 0 FOR 392.218;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 59.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 59.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 39.818;
			LEVEL 1 FOR 20.182;
			LEVEL 0 FOR 2.706;
		}
	}
}

TRANSITION_LIST("alu_rd[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.91;
			LEVEL 0 FOR 392.719;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 582.326;
		}
	}
}

TRANSITION_LIST("alu_rd[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.18;
			LEVEL 0 FOR 72.708;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 59.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 59.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 59.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 59.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 59.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 59.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 39.944;
			LEVEL 1 FOR 20.056;
			LEVEL 0 FOR 3.056;
		}
	}
}

TRANSITION_LIST("aluisel")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.454;
			LEVEL 0 FOR 995.546;
		}
	}
}

TRANSITION_LIST("pipe_reg_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 9.406;
			LEVEL 1 FOR 550.52;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.111;
			LEVEL 1 FOR 39.889;
			LEVEL 0 FOR 20.074;
		}
	}
}

TRANSITION_LIST("pipe_jmp_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.739;
			LEVEL 0 FOR 552.531;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 39.936;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 2.666;
		}
	}
}

TRANSITION_LIST("pipe_fetch_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.41;
			LEVEL 1 FOR 52.171;
			LEVEL 0 FOR 58.672;
			LEVEL 1 FOR 21.005;
			LEVEL 0 FOR 58.995;
			LEVEL 1 FOR 21.005;
			LEVEL 0 FOR 58.995;
			LEVEL 1 FOR 21.005;
			LEVEL 0 FOR 60.02;
			LEVEL 1 FOR 102.49;
			LEVEL 0 FOR 56.307;
			LEVEL 1 FOR 43.693;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 43.706;
			LEVEL 0 FOR 16.294;
			LEVEL 1 FOR 0.938;
		}
	}
}

TRANSITION_LIST("pipe_dec_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.163;
			LEVEL 1 FOR 52.14;
			LEVEL 0 FOR 58.703;
			LEVEL 1 FOR 20.974;
			LEVEL 0 FOR 59.026;
			LEVEL 1 FOR 20.974;
			LEVEL 0 FOR 59.026;
			LEVEL 1 FOR 20.974;
			LEVEL 0 FOR 60.051;
			LEVEL 1 FOR 102.459;
			LEVEL 0 FOR 56.338;
			LEVEL 1 FOR 43.662;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 43.675;
			LEVEL 0 FOR 16.325;
			LEVEL 1 FOR 1.185;
		}
	}
}

TRANSITION_LIST("pipe_alu_en")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.834;
			LEVEL 1 FOR 552.396;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 39.99;
			LEVEL 0 FOR 20.01;
			LEVEL 1 FOR 2.76;
		}
	}
}

TRANSITION_LIST("decoded_instr[19]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.932;
			LEVEL 0 FOR 454.918;
			LEVEL 1 FOR 80.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 40.062;
			LEVEL 0 FOR 19.938;
			LEVEL 1 FOR 20.15;
		}
	}
}

TRANSITION_LIST("decoded_instr[18]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.599;
			LEVEL 0 FOR 455.0;
			LEVEL 1 FOR 79.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 39.98;
			LEVEL 0 FOR 20.02;
			LEVEL 1 FOR 19.401;
		}
	}
}

TRANSITION_LIST("decoded_instr[17]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.525;
			LEVEL 0 FOR 455.007;
			LEVEL 1 FOR 79.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 39.973;
			LEVEL 0 FOR 20.027;
			LEVEL 1 FOR 19.468;
		}
	}
}

TRANSITION_LIST("decoded_instr[16]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.549;
			LEVEL 0 FOR 995.451;
		}
	}
}

TRANSITION_LIST("decoded_instr[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.63;
			LEVEL 0 FOR 55.041;
			LEVEL 1 FOR 239.938;
			LEVEL 0 FOR 140.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 80.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 40.062;
			LEVEL 1 FOR 19.938;
			LEVEL 0 FOR 19.391;
		}
	}
}

TRANSITION_LIST("decoded_instr[14]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.595;
			LEVEL 0 FOR 995.405;
		}
	}
}

TRANSITION_LIST("decoded_instr[13]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.383;
			LEVEL 0 FOR 994.617;
		}
	}
}

TRANSITION_LIST("decoded_instr[12]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.718;
			LEVEL 0 FOR 454.959;
			LEVEL 1 FOR 80.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 40.02;
			LEVEL 0 FOR 19.98;
			LEVEL 1 FOR 20.323;
		}
	}
}

TRANSITION_LIST("decoded_instr[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.645;
			LEVEL 0 FOR 434.974;
			LEVEL 1 FOR 560.381;
		}
	}
}

TRANSITION_LIST("decoded_instr[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.51;
			LEVEL 0 FOR 434.954;
			LEVEL 1 FOR 559.536;
		}
	}
}

TRANSITION_LIST("decoded_instr[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.116;
			LEVEL 0 FOR 294.935;
			LEVEL 1 FOR 80.047;
			LEVEL 0 FOR 59.953;
			LEVEL 1 FOR 559.949;
		}
	}
}

TRANSITION_LIST("decoded_instr[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.741;
			LEVEL 0 FOR 294.834;
			LEVEL 1 FOR 80.148;
			LEVEL 0 FOR 618.277;
		}
	}
}

TRANSITION_LIST("decoded_instr[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.514;
			LEVEL 0 FOR 35.013;
			LEVEL 1 FOR 339.964;
			LEVEL 0 FOR 60.036;
			LEVEL 1 FOR 559.473;
		}
	}
}

TRANSITION_LIST("decoded_instr[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.376;
			LEVEL 0 FOR 454.902;
			LEVEL 1 FOR 80.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 40.075;
			LEVEL 0 FOR 19.925;
			LEVEL 1 FOR 19.722;
		}
	}
}

TRANSITION_LIST("decoded_instr[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.988;
			LEVEL 0 FOR 454.947;
			LEVEL 1 FOR 80.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 40.03;
			LEVEL 0 FOR 19.97;
			LEVEL 1 FOR 19.065;
		}
	}
}

TRANSITION_LIST("decoded_instr[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.269;
			LEVEL 0 FOR 34.658;
			LEVEL 1 FOR 420.083;
			LEVEL 0 FOR 79.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 39.917;
			LEVEL 1 FOR 20.083;
			LEVEL 0 FOR 19.99;
		}
	}
}

TRANSITION_LIST("decoded_instr[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.455;
			LEVEL 0 FOR 994.545;
		}
	}
}

TRANSITION_LIST("decoded_instr[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.821;
			LEVEL 0 FOR 995.179;
		}
	}
}

TRANSITION_LIST("decoded_instr[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.801;
			LEVEL 0 FOR 34.996;
			LEVEL 1 FOR 960.203;
		}
	}
}

TRANSITION_LIST("decoded_instr[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.58;
			LEVEL 0 FOR 34.74;
			LEVEL 1 FOR 959.68;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "nreset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_instr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 0;
	CHILDREN = 24, 25, 26;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 23;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
	CHILDREN = 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 27;
}

DISPLAY_LINE
{
	CHANNEL = "alua";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "alua[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alua[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "alub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
	CHILDREN = 46, 47, 48, 49, 50, 51, 52, 53;
}

DISPLAY_LINE
{
	CHANNEL = "alub[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "alub[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 45;
}

DISPLAY_LINE
{
	CHANNEL = "aluibranch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alu_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "alu_rd[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "aluisel";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pipe_reg_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pipe_jmp_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pipe_fetch_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pipe_dec_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pipe_alu_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
