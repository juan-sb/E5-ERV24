/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nreset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("alu_f3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_f3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_f3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_f3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_f3";
}

SIGNAL("alu_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alu_out[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alu_out[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alu_out";
}

SIGNAL("alua")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alua[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alub[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("aluibranch")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("nreset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("alu_f3[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.851;
			LEVEL 0 FOR 995.149;
		}
	}
}

TRANSITION_LIST("alu_f3[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.123;
			LEVEL 0 FOR 994.877;
		}
	}
}

TRANSITION_LIST("alu_f3[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.189;
			LEVEL 0 FOR 372.417;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 39.998;
			LEVEL 1 FOR 20.002;
			LEVEL 0 FOR 3.392;
		}
	}
}

TRANSITION_LIST("alu_out[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.926;
			LEVEL 0 FOR 76.564;
			LEVEL 1 FOR 15.848;
			LEVEL 0 FOR 104.546;
			LEVEL 1 FOR 19.835;
			LEVEL 0 FOR 159.597;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 43.978;
			LEVEL 1 FOR 16.022;
			LEVEL 0 FOR 1.662;
		}
	}
}

TRANSITION_LIST("alu_out[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.767;
			LEVEL 0 FOR 75.888;
			LEVEL 1 FOR 16.524;
			LEVEL 0 FOR 283.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 43.961;
			LEVEL 1 FOR 16.039;
			LEVEL 0 FOR 1.821;
		}
	}
}

TRANSITION_LIST("alu_out[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.175;
			LEVEL 0 FOR 76.338;
			LEVEL 1 FOR 16.074;
			LEVEL 0 FOR 284.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 44.594;
			LEVEL 1 FOR 15.406;
			LEVEL 0 FOR 2.413;
		}
	}
}

TRANSITION_LIST("alu_out[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.313;
			LEVEL 0 FOR 76.719;
			LEVEL 1 FOR 15.693;
			LEVEL 0 FOR 159.87;
			LEVEL 1 FOR 5.382;
			LEVEL 0 FOR 119.274;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 44.526;
			LEVEL 1 FOR 15.474;
			LEVEL 0 FOR 2.275;
		}
	}
}

TRANSITION_LIST("alu_out[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.317;
			LEVEL 0 FOR 77.199;
			LEVEL 1 FOR 15.213;
			LEVEL 0 FOR 159.962;
			LEVEL 1 FOR 20.038;
			LEVEL 0 FOR 105.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 45.637;
			LEVEL 1 FOR 14.363;
			LEVEL 0 FOR 2.271;
		}
	}
}

TRANSITION_LIST("alu_out[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.292;
			LEVEL 0 FOR 76.914;
			LEVEL 1 FOR 15.498;
			LEVEL 0 FOR 902.296;
		}
	}
}

TRANSITION_LIST("alu_out[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.979;
			LEVEL 0 FOR 76.694;
			LEVEL 1 FOR 15.718;
			LEVEL 0 FOR 164.282;
			LEVEL 1 FOR 15.718;
			LEVEL 0 FOR 25.01;
			LEVEL 1 FOR 14.99;
			LEVEL 0 FOR 680.609;
		}
	}
}

TRANSITION_LIST("alu_out[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.417;
			LEVEL 0 FOR 76.738;
			LEVEL 1 FOR 15.674;
			LEVEL 0 FOR 104.326;
			LEVEL 1 FOR 35.674;
			LEVEL 0 FOR 762.171;
		}
	}
}

TRANSITION_LIST("alua[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.941;
			LEVEL 0 FOR 995.059;
		}
	}
}

TRANSITION_LIST("alua[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.274;
			LEVEL 0 FOR 994.726;
		}
	}
}

TRANSITION_LIST("alua[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.546;
			LEVEL 0 FOR 994.454;
		}
	}
}

TRANSITION_LIST("alua[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.445;
			LEVEL 0 FOR 232.339;
			LEVEL 1 FOR 19.985;
			LEVEL 0 FOR 742.231;
		}
	}
}

TRANSITION_LIST("alua[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.104;
			LEVEL 0 FOR 232.457;
			LEVEL 1 FOR 19.865;
			LEVEL 0 FOR 741.574;
		}
	}
}

TRANSITION_LIST("alua[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.281;
			LEVEL 0 FOR 993.719;
		}
	}
}

TRANSITION_LIST("alua[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.788;
			LEVEL 0 FOR 373.009;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 40.59;
			LEVEL 1 FOR 19.41;
			LEVEL 0 FOR 0.793;
		}
	}
}

TRANSITION_LIST("alua[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.197;
			LEVEL 0 FOR 292.282;
			LEVEL 1 FOR 20.131;
			LEVEL 0 FOR 680.39;
		}
	}
}

TRANSITION_LIST("alub[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.613;
			LEVEL 0 FOR 72.245;
			LEVEL 1 FOR 20.068;
			LEVEL 0 FOR 60.233;
			LEVEL 1 FOR 19.868;
			LEVEL 0 FOR 20.225;
			LEVEL 1 FOR 19.674;
			LEVEL 0 FOR 782.074;
		}
	}
}

TRANSITION_LIST("alub[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.424;
			LEVEL 0 FOR 72.509;
			LEVEL 1 FOR 20.086;
			LEVEL 0 FOR 60.497;
			LEVEL 1 FOR 20.086;
			LEVEL 0 FOR 821.398;
		}
	}
}

TRANSITION_LIST("alub[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.016;
			LEVEL 0 FOR 71.429;
			LEVEL 1 FOR 20.284;
			LEVEL 0 FOR 60.429;
			LEVEL 1 FOR 20.271;
			LEVEL 0 FOR 819.571;
		}
	}
}

TRANSITION_LIST("alub[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.984;
			LEVEL 0 FOR 72.374;
			LEVEL 1 FOR 20.047;
			LEVEL 0 FOR 60.123;
			LEVEL 1 FOR 20.112;
			LEVEL 0 FOR 821.36;
		}
	}
}

TRANSITION_LIST("alub[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.753;
			LEVEL 0 FOR 72.066;
			LEVEL 1 FOR 19.99;
			LEVEL 0 FOR 60.559;
			LEVEL 1 FOR 20.072;
			LEVEL 0 FOR 79.379;
			LEVEL 1 FOR 19.99;
			LEVEL 0 FOR 100.01;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 39.647;
			LEVEL 1 FOR 20.353;
			LEVEL 0 FOR 1.828;
		}
	}
}

TRANSITION_LIST("alub[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.303;
			LEVEL 0 FOR 71.881;
			LEVEL 1 FOR 20.06;
			LEVEL 0 FOR 60.518;
			LEVEL 1 FOR 20.081;
			LEVEL 0 FOR 821.157;
		}
	}
}

TRANSITION_LIST("alub[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.911;
			LEVEL 0 FOR 72.407;
			LEVEL 1 FOR 20.014;
			LEVEL 0 FOR 60.226;
			LEVEL 1 FOR 20.099;
			LEVEL 0 FOR 79.661;
			LEVEL 1 FOR 20.014;
			LEVEL 0 FOR 100.226;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 40.436;
			LEVEL 1 FOR 19.564;
			LEVEL 0 FOR 1.878;
		}
	}
}

TRANSITION_LIST("alub[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.872;
			LEVEL 0 FOR 72.277;
			LEVEL 1 FOR 20.134;
			LEVEL 0 FOR 60.1;
			LEVEL 1 FOR 20.141;
			LEVEL 0 FOR 19.625;
			LEVEL 1 FOR 40.134;
			LEVEL 0 FOR 59.866;
			LEVEL 1 FOR 20.134;
			LEVEL 0 FOR 681.717;
		}
	}
}

TRANSITION_LIST("aluibranch")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.005;
			LEVEL 0 FOR 372.375;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 39.955;
			LEVEL 1 FOR 20.045;
			LEVEL 0 FOR 2.575;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "nreset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_f3[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alu_out[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "alua";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
	CHILDREN = 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "alua[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alua[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 15;
}

DISPLAY_LINE
{
	CHANNEL = "alub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27, 28, 29, 30, 31, 32;
}

DISPLAY_LINE
{
	CHANNEL = "alub[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "alub[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "aluibranch";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
