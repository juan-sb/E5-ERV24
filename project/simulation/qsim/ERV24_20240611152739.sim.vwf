/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2023  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("branch_taken")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("by_en")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("by_en[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("by_en[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("by_en[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("by_en[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "by_en";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("decoded_pc")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("decoded_pc[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("decoded_pc[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "decoded_pc";
}

SIGNAL("GPIO")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = BIDIR;
	PARENT = "";
}

SIGNAL("GPIO[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("GPIO[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = BIDIR;
	PARENT = "GPIO";
}

SIGNAL("instr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 28;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("instr[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("instr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "instr";
}

SIGNAL("gpioen")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nreset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("predicted_taken")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc_wr_flag")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc_wr")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("pc_wr[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("pc_wr[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "pc_wr";
}

SIGNAL("alu_z")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("immed")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("immed[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("immed[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "immed";
}

SIGNAL("alua")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alua[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alua[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alua";
}

SIGNAL("alub")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("alub[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

SIGNAL("alub[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "alub";
}

TRANSITION_LIST("branch_taken")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.053;
			LEVEL 0 FOR 993.947;
		}
	}
}

TRANSITION_LIST("by_en[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.623;
			LEVEL 0 FOR 73.728;
			LEVEL 1 FOR 18.695;
			LEVEL 0 FOR 280.356;
			LEVEL 1 FOR 19.59;
			LEVEL 0 FOR 600.008;
		}
	}
}

TRANSITION_LIST("by_en[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.89;
			LEVEL 0 FOR 253.664;
			LEVEL 1 FOR 18.759;
			LEVEL 0 FOR 21.325;
			LEVEL 1 FOR 18.675;
			LEVEL 0 FOR 60.292;
			LEVEL 1 FOR 19.659;
			LEVEL 0 FOR 41.374;
			LEVEL 1 FOR 20.007;
			LEVEL 0 FOR 79.993;
			LEVEL 1 FOR 19.771;
			LEVEL 0 FOR 439.591;
		}
	}
}

TRANSITION_LIST("by_en[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.682;
			LEVEL 0 FOR 153.387;
			LEVEL 1 FOR 20.224;
			LEVEL 0 FOR 19.776;
			LEVEL 1 FOR 39.036;
			LEVEL 0 FOR 221.262;
			LEVEL 1 FOR 18.738;
			LEVEL 0 FOR 519.895;
		}
	}
}

TRANSITION_LIST("by_en[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.494;
			LEVEL 0 FOR 32.324;
			LEVEL 1 FOR 41.155;
			LEVEL 0 FOR 100.098;
			LEVEL 1 FOR 19.902;
			LEVEL 0 FOR 218.845;
			LEVEL 1 FOR 21.492;
			LEVEL 0 FOR 119.707;
			LEVEL 1 FOR 439.983;
		}
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("decoded_pc[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.951;
			LEVEL 0 FOR 852.537;
			LEVEL 1 FOR 141.512;
		}
	}
}

TRANSITION_LIST("decoded_pc[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.199;
			LEVEL 0 FOR 532.391;
			LEVEL 1 FOR 320.039;
			LEVEL 0 FOR 142.371;
		}
	}
}

TRANSITION_LIST("decoded_pc[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.616;
			LEVEL 0 FOR 232.822;
			LEVEL 1 FOR 299.992;
			LEVEL 0 FOR 160.008;
			LEVEL 1 FOR 159.992;
			LEVEL 0 FOR 142.57;
		}
	}
}

TRANSITION_LIST("decoded_pc[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.218;
			LEVEL 0 FOR 152.754;
			LEVEL 1 FOR 80.06;
			LEVEL 0 FOR 179.94;
			LEVEL 1 FOR 40.06;
			LEVEL 0 FOR 59.94;
			LEVEL 1 FOR 20.06;
			LEVEL 0 FOR 79.94;
			LEVEL 1 FOR 80.06;
			LEVEL 0 FOR 79.94;
			LEVEL 1 FOR 80.06;
			LEVEL 0 FOR 79.94;
			LEVEL 1 FOR 61.028;
		}
	}
}

TRANSITION_LIST("decoded_pc[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.316;
			LEVEL 0 FOR 52.772;
			LEVEL 1 FOR 100.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 139.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 99.958;
			LEVEL 1 FOR 20.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 40.042;
			LEVEL 0 FOR 39.958;
			LEVEL 1 FOR 22.912;
		}
	}
}

TRANSITION_LIST("decoded_pc[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.747;
			LEVEL 0 FOR 32.755;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 79.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 39.941;
			LEVEL 1 FOR 80.059;
			LEVEL 0 FOR 39.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 59.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 20.059;
			LEVEL 0 FOR 19.941;
			LEVEL 1 FOR 2.498;
		}
	}
}

TRANSITION_LIST("decoded_pc[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.782;
			LEVEL 0 FOR 995.218;
		}
	}
}

TRANSITION_LIST("decoded_pc[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.457;
			LEVEL 0 FOR 995.543;
		}
	}
}

TRANSITION_LIST("GPIO[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.11;
			LEVEL Z FOR 172.332;
			LEVEL 0 FOR 259.584;
			LEVEL 1 FOR 559.974;
			LEVEL X FOR 1.0;
		}
	}
}

TRANSITION_LIST("GPIO[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 2.518;
			LEVEL Z FOR 173.758;
			LEVEL 0 FOR 823.724;
		}
	}
}

TRANSITION_LIST("GPIO[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.429;
			LEVEL Z FOR 172.359;
			LEVEL 0 FOR 820.212;
		}
	}
}

TRANSITION_LIST("GPIO[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.799;
			LEVEL Z FOR 172.26;
			LEVEL 0 FOR 822.941;
		}
	}
}

TRANSITION_LIST("GPIO[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.05;
			LEVEL Z FOR 172.264;
			LEVEL 0 FOR 822.686;
		}
	}
}

TRANSITION_LIST("GPIO[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.601;
			LEVEL Z FOR 172.168;
			LEVEL 0 FOR 822.231;
		}
	}
}

TRANSITION_LIST("GPIO[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.599;
			LEVEL Z FOR 172.194;
			LEVEL 0 FOR 823.207;
		}
	}
}

TRANSITION_LIST("GPIO[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.003;
			LEVEL Z FOR 172.109;
			LEVEL 0 FOR 259.533;
			LEVEL 1 FOR 562.355;
			LEVEL X FOR 1.0;
		}
	}
}

TRANSITION_LIST("instr[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("instr[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 999.0;
		LEVEL 0 FOR 1.0;
	}
}

TRANSITION_LIST("gpioen")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.84;
			LEVEL 0 FOR 52.292;
			LEVEL 1 FOR 20.167;
			LEVEL 0 FOR 79.802;
			LEVEL 1 FOR 40.146;
			LEVEL 0 FOR 219.854;
			LEVEL 1 FOR 20.146;
			LEVEL 0 FOR 559.753;
		}
	}
}

TRANSITION_LIST("nreset")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("predicted_taken")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.403;
			LEVEL 0 FOR 352.342;
			LEVEL 1 FOR 20.079;
			LEVEL 0 FOR 623.176;
		}
	}
}

TRANSITION_LIST("pc_wr_flag")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.974;
			LEVEL 0 FOR 353.125;
			LEVEL 1 FOR 19.139;
			LEVEL 0 FOR 620.762;
		}
	}
}

TRANSITION_LIST("pc_wr[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 8.163;
			LEVEL 0 FOR 450.183;
			LEVEL 1 FOR 20.154;
			LEVEL 0 FOR 382.226;
			LEVEL 1 FOR 139.274;
		}
	}
}

TRANSITION_LIST("pc_wr[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.842;
			LEVEL 0 FOR 450.731;
			LEVEL 1 FOR 20.064;
			LEVEL 0 FOR 62.026;
			LEVEL 1 FOR 320.053;
			LEVEL 0 FOR 139.284;
		}
	}
}

TRANSITION_LIST("pc_wr[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.661;
			LEVEL 0 FOR 232.232;
			LEVEL 1 FOR 19.626;
			LEVEL 0 FOR 19.761;
			LEVEL 1 FOR 20.211;
			LEVEL 0 FOR 59.789;
			LEVEL 1 FOR 120.211;
			LEVEL 0 FOR 39.789;
			LEVEL 1 FOR 20.702;
			LEVEL 0 FOR 159.911;
			LEVEL 1 FOR 160.089;
			LEVEL 0 FOR 140.018;
		}
	}
}

TRANSITION_LIST("pc_wr[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.665;
			LEVEL 0 FOR 152.669;
			LEVEL 1 FOR 80.009;
			LEVEL 0 FOR 179.991;
			LEVEL 1 FOR 38.324;
			LEVEL 0 FOR 161.676;
			LEVEL 1 FOR 80.009;
			LEVEL 0 FOR 79.991;
			LEVEL 1 FOR 80.009;
			LEVEL 0 FOR 79.991;
			LEVEL 1 FOR 59.666;
		}
	}
}

TRANSITION_LIST("pc_wr[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.574;
			LEVEL 0 FOR 52.4;
			LEVEL 1 FOR 20.011;
			LEVEL 0 FOR 59.194;
			LEVEL 1 FOR 20.865;
			LEVEL 0 FOR 39.93;
			LEVEL 1 FOR 40.07;
			LEVEL 0 FOR 119.93;
			LEVEL 1 FOR 20.011;
			LEVEL 0 FOR 19.194;
			LEVEL 1 FOR 20.865;
			LEVEL 0 FOR 38.496;
			LEVEL 1 FOR 21.445;
			LEVEL 0 FOR 99.989;
			LEVEL 1 FOR 40.07;
			LEVEL 0 FOR 39.93;
			LEVEL 1 FOR 40.07;
			LEVEL 0 FOR 39.93;
			LEVEL 1 FOR 40.07;
			LEVEL 0 FOR 39.93;
			LEVEL 1 FOR 40.07;
			LEVEL 0 FOR 39.93;
			LEVEL 1 FOR 40.07;
			LEVEL 0 FOR 39.93;
			LEVEL 1 FOR 20.026;
		}
	}
}

TRANSITION_LIST("pc_wr[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.563;
			LEVEL 1 FOR 52.597;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 79.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 99.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 39.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 99.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 20.006;
			LEVEL 1 FOR 19.994;
			LEVEL 0 FOR 19.84;
		}
	}
}

TRANSITION_LIST("pc_wr[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.394;
			LEVEL 0 FOR 992.606;
		}
	}
}

TRANSITION_LIST("pc_wr[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 7.19;
			LEVEL 0 FOR 992.81;
		}
	}
}

TRANSITION_LIST("alu_z")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 12.147;
			LEVEL 1 FOR 49.721;
			LEVEL 0 FOR 42.341;
			LEVEL 1 FOR 58.188;
			LEVEL 0 FOR 121.019;
			LEVEL 1 FOR 20.391;
			LEVEL 0 FOR 19.891;
			LEVEL 1 FOR 56.735;
			LEVEL 0 FOR 123.553;
			LEVEL 1 FOR 39.821;
			LEVEL 0 FOR 19.891;
			LEVEL 1 FOR 436.302;
		}
	}
}

TRANSITION_LIST("immed[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 3.861;
			LEVEL 0 FOR 52.375;
			LEVEL 1 FOR 20.047;
			LEVEL 0 FOR 99.953;
			LEVEL 1 FOR 20.047;
			LEVEL 0 FOR 159.953;
			LEVEL 1 FOR 20.047;
			LEVEL 0 FOR 79.953;
			LEVEL 1 FOR 20.047;
			LEVEL 0 FOR 523.717;
		}
	}
}

TRANSITION_LIST("immed[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.471;
			LEVEL 0 FOR 52.274;
			LEVEL 1 FOR 20.148;
			LEVEL 0 FOR 279.852;
			LEVEL 1 FOR 20.148;
			LEVEL 0 FOR 79.852;
			LEVEL 1 FOR 20.148;
			LEVEL 0 FOR 522.107;
		}
	}
}

TRANSITION_LIST("immed[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.419;
			LEVEL 0 FOR 52.4;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 279.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 79.978;
			LEVEL 1 FOR 20.022;
			LEVEL 0 FOR 523.159;
		}
	}
}

TRANSITION_LIST("immed[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.822;
			LEVEL 0 FOR 52.733;
			LEVEL 1 FOR 20.065;
			LEVEL 0 FOR 279.935;
			LEVEL 1 FOR 20.065;
			LEVEL 0 FOR 622.38;
		}
	}
}

TRANSITION_LIST("immed[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.553;
			LEVEL 0 FOR 52.363;
			LEVEL 1 FOR 20.048;
			LEVEL 0 FOR 159.952;
			LEVEL 1 FOR 20.048;
			LEVEL 0 FOR 99.952;
			LEVEL 1 FOR 20.048;
			LEVEL 0 FOR 79.952;
			LEVEL 1 FOR 20.048;
			LEVEL 0 FOR 523.036;
		}
	}
}

TRANSITION_LIST("immed[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.182;
			LEVEL 0 FOR 52.386;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 59.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 199.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 79.975;
			LEVEL 1 FOR 20.025;
			LEVEL 0 FOR 523.407;
		}
	}
}

TRANSITION_LIST("immed[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.916;
			LEVEL 0 FOR 52.372;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 159.961;
			LEVEL 1 FOR 20.039;
			LEVEL 0 FOR 742.673;
		}
	}
}

TRANSITION_LIST("immed[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.511;
			LEVEL 0 FOR 52.287;
			LEVEL 1 FOR 20.143;
			LEVEL 0 FOR 59.857;
			LEVEL 1 FOR 20.143;
			LEVEL 0 FOR 19.857;
			LEVEL 1 FOR 40.143;
			LEVEL 0 FOR 59.857;
			LEVEL 1 FOR 20.143;
			LEVEL 0 FOR 119.857;
			LEVEL 1 FOR 40.143;
			LEVEL 0 FOR 59.857;
			LEVEL 1 FOR 20.143;
			LEVEL 0 FOR 462.059;
		}
	}
}

TRANSITION_LIST("alua[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.529;
			LEVEL 0 FOR 994.471;
		}
	}
}

TRANSITION_LIST("alua[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.96;
			LEVEL 0 FOR 995.04;
		}
	}
}

TRANSITION_LIST("alua[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.978;
			LEVEL 0 FOR 995.022;
		}
	}
}

TRANSITION_LIST("alua[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.109;
			LEVEL 0 FOR 993.891;
		}
	}
}

TRANSITION_LIST("alua[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.103;
			LEVEL 0 FOR 432.403;
			LEVEL 1 FOR 20.099;
			LEVEL 0 FOR 542.395;
		}
	}
}

TRANSITION_LIST("alua[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.675;
			LEVEL 0 FOR 995.325;
		}
	}
}

TRANSITION_LIST("alua[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.066;
			LEVEL 0 FOR 392.955;
			LEVEL 1 FOR 19.932;
			LEVEL 0 FOR 60.068;
			LEVEL 1 FOR 19.477;
			LEVEL 0 FOR 502.502;
		}
	}
}

TRANSITION_LIST("alua[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.585;
			LEVEL 0 FOR 232.95;
			LEVEL 1 FOR 20.055;
			LEVEL 0 FOR 219.945;
			LEVEL 1 FOR 19.189;
			LEVEL 0 FOR 502.276;
		}
	}
}

TRANSITION_LIST("alua[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.301;
			LEVEL 0 FOR 233.081;
			LEVEL 1 FOR 19.922;
			LEVEL 0 FOR 741.696;
		}
	}
}

TRANSITION_LIST("alua[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.646;
			LEVEL 0 FOR 472.627;
			LEVEL 1 FOR 19.725;
			LEVEL 0 FOR 502.002;
		}
	}
}

TRANSITION_LIST("alua[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.458;
			LEVEL 0 FOR 372.804;
			LEVEL 1 FOR 19.618;
			LEVEL 0 FOR 602.12;
		}
	}
}

TRANSITION_LIST("alua[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.525;
			LEVEL 0 FOR 292.149;
			LEVEL 1 FOR 20.259;
			LEVEL 0 FOR 119.911;
			LEVEL 1 FOR 20.089;
			LEVEL 0 FOR 79.741;
			LEVEL 1 FOR 20.259;
			LEVEL 0 FOR 443.067;
		}
	}
}

TRANSITION_LIST("alub[11]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.019;
			LEVEL 0 FOR 472.325;
			LEVEL 1 FOR 20.098;
			LEVEL 0 FOR 502.558;
		}
	}
}

TRANSITION_LIST("alub[10]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.856;
			LEVEL 0 FOR 472.344;
			LEVEL 1 FOR 20.058;
			LEVEL 0 FOR 502.742;
		}
	}
}

TRANSITION_LIST("alub[9]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.277;
			LEVEL 0 FOR 472.234;
			LEVEL 1 FOR 20.034;
			LEVEL 0 FOR 502.455;
		}
	}
}

TRANSITION_LIST("alub[8]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 6.331;
			LEVEL 0 FOR 472.226;
			LEVEL 1 FOR 20.198;
			LEVEL 0 FOR 501.245;
		}
	}
}

TRANSITION_LIST("alub[7]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.487;
			LEVEL 0 FOR 72.277;
			LEVEL 1 FOR 20.145;
			LEVEL 0 FOR 59.648;
			LEVEL 1 FOR 19.877;
			LEVEL 0 FOR 20.216;
			LEVEL 1 FOR 20.259;
			LEVEL 0 FOR 199.648;
			LEVEL 1 FOR 19.877;
			LEVEL 0 FOR 40.33;
			LEVEL 1 FOR 20.145;
			LEVEL 0 FOR 502.091;
		}
	}
}

TRANSITION_LIST("alub[6]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.721;
			LEVEL 0 FOR 72.304;
			LEVEL 1 FOR 20.102;
			LEVEL 0 FOR 60.206;
			LEVEL 1 FOR 19.907;
			LEVEL 0 FOR 299.785;
			LEVEL 1 FOR 20.102;
			LEVEL 0 FOR 502.873;
		}
	}
}

TRANSITION_LIST("alub[5]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.081;
			LEVEL 0 FOR 72.74;
			LEVEL 1 FOR 20.058;
			LEVEL 0 FOR 59.861;
			LEVEL 1 FOR 19.862;
			LEVEL 0 FOR 300.219;
			LEVEL 1 FOR 20.058;
			LEVEL 0 FOR 502.121;
		}
	}
}

TRANSITION_LIST("alub[4]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.526;
			LEVEL 0 FOR 72.288;
			LEVEL 1 FOR 20.121;
			LEVEL 0 FOR 60.105;
			LEVEL 1 FOR 19.714;
			LEVEL 0 FOR 822.246;
		}
	}
}

TRANSITION_LIST("alub[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.375;
			LEVEL 0 FOR 71.971;
			LEVEL 1 FOR 20.066;
			LEVEL 0 FOR 60.412;
			LEVEL 1 FOR 20.095;
			LEVEL 0 FOR 79.427;
			LEVEL 1 FOR 20.066;
			LEVEL 0 FOR 100.412;
			LEVEL 1 FOR 19.968;
			LEVEL 0 FOR 79.554;
			LEVEL 1 FOR 20.066;
			LEVEL 0 FOR 502.588;
		}
	}
}

TRANSITION_LIST("alub[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.507;
			LEVEL 0 FOR 72.014;
			LEVEL 1 FOR 20.019;
			LEVEL 0 FOR 60.483;
			LEVEL 1 FOR 20.065;
			LEVEL 0 FOR 299.433;
			LEVEL 1 FOR 20.019;
			LEVEL 0 FOR 502.46;
		}
	}
}

TRANSITION_LIST("alub[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.942;
			LEVEL 0 FOR 72.405;
			LEVEL 1 FOR 20.135;
			LEVEL 0 FOR 60.029;
			LEVEL 1 FOR 20.092;
			LEVEL 0 FOR 79.744;
			LEVEL 1 FOR 20.135;
			LEVEL 0 FOR 100.029;
			LEVEL 1 FOR 19.848;
			LEVEL 0 FOR 602.641;
		}
	}
}

TRANSITION_LIST("alub[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.359;
			LEVEL 0 FOR 72.394;
			LEVEL 1 FOR 20.146;
			LEVEL 0 FOR 60.017;
			LEVEL 1 FOR 20.097;
			LEVEL 0 FOR 19.712;
			LEVEL 1 FOR 40.174;
			LEVEL 0 FOR 59.854;
			LEVEL 1 FOR 20.146;
			LEVEL 0 FOR 100.017;
			LEVEL 1 FOR 59.983;
			LEVEL 0 FOR 59.854;
			LEVEL 1 FOR 20.146;
			LEVEL 0 FOR 442.101;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "nreset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "decoded_pc[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "instr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "instr[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "instr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "by_en";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 0;
	CHILDREN = 41, 42, 43, 44;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "by_en[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 40;
}

DISPLAY_LINE
{
	CHANNEL = "gpioen";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "predicted_taken";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "branch_taken";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr_flag";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
	CHILDREN = 50, 51, 52, 53, 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "GPIO[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 49;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60, 61, 62, 63, 64, 65, 66;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "pc_wr[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "alu_z";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "immed";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 70, 71, 72, 73, 74, 75, 76;
}

DISPLAY_LINE
{
	CHANNEL = "immed[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "immed[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "alua";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 0;
	CHILDREN = 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89;
}

DISPLAY_LINE
{
	CHANNEL = "alua[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alua[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 77;
}

DISPLAY_LINE
{
	CHANNEL = "alub";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 0;
	CHILDREN = 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102;
}

DISPLAY_LINE
{
	CHANNEL = "alub[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 90;
}

DISPLAY_LINE
{
	CHANNEL = "alub[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 90;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
